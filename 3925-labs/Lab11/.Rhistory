library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
install.packages("TSA")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
d2 = d1^2
d2
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
d2 = d1^2
ts.plot(d2)
acf(d2)
pacf(d2)
spectrum(d2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
par(mfrow = c(4, 1))
d2 = d1^2
ts.plot(d2)
acf(d2)
pacf(d2)
spectrum(d2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
par(mfrow = c(4, 1))
d2 = d1^2
ts.plot(d2)
acf(d2)
pacf(d2)
spectrum(d2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
par(mfrow = c(4, 1))
d2 = d1^2
ts.plot(d2)
acf(d2)
pacf(d2)
spectrum(d2)
ar2 = arima(d2, order = c(2,0,0))
ma1 = arima(d2, order = c(0,0,1))
ma2 = arima(d2, order = c(0,0,2))
arma11 = arima(d2, order = c(1,0,1))
ar2
names(ar2)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
tidy = TRUE,
fig.width = 6,
fig.height = 6,
fig.align = "center")
# Question 1
par(mfrow = c(4, 1))
library('fracdiff')
s = fracdiff.sim(1300, ar = 0.7, ma = 0.4, d = 0.35)
s_series = s$series[301:1300]
ts.plot(s_series)
acf(s_series)
pacf(s_series)
spectrum(s_series)
set.seed(100)
# Question 2
d = fracdiff(s_series, nar = length(s$ar), nma = length(s$ma))
d
d$stderror.dpq
confint(d)
library("TSA")
set.seed(100)
d = garch.sim(alpha = c(0.7, 0.4), n = 1000)
d1 = d[201:1000]
par(mfrow = c(3, 1))
ts.plot(d1)
acf(d1)
pacf(d1)
par(mfrow = c(1, 1))
x = spectrum(d1)
par(mfrow = c(4, 1))
d2 = d1^2
ts.plot(d2)
acf(d2)
pacf(d2)
spectrum(d2)
ar1 = arima(d1, order = c(1, 0, 0))
ar2 = arima(d2, order = c(2, 0, 0))
ma1 = arima(d2, order = c(0, 0, 1))
ma2 = arima(d2, order = c(0, 0, 2))
arma11 = arima(d2, order = c(1, 0, 1))
c(ar1$aic, ar2$aic, ma1$aic, ma2$aic, arma11$aic)
